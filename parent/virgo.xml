<!--  
 - OPEN SOURCE LICENCE TEXT
 - Copyright (C) 2011, SOCIETIES consortium
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.societies</groupId>
  <artifactId>virgo-parent</artifactId>
  <version>0.1</version>
  <packaging>pom</packaging>

  <!-- All platform projects should inherit from version-parent
    - so that a common versioning can be applied
    -->
  <parent>
    <groupId>org.societies</groupId>
    <artifactId>version-parent</artifactId>
    <version>0.1</version>
    <relativePath>./version.xml</relativePath>
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- Specific properties for the Virgo environment -->

    <!-- The location of the virgo runtime should be configured in a *maven profile*
       - and not in here (to prevent an accidential check in)
       -
       - The following variables are assumed to be declared:
       -   virgo.home   - Where the virgo/equinox is deployed
       -   virgo.deploy - Deployment folder to deploy artifacts to
       -
      -->

  </properties>

  <!-- Defines from where toolkits and libraries are fetched -->
  <repositories>
    <!-- Societies repository -->
    <repository>
      <id>societies</id>
      <name>Societies Maven Repository</name>
      <url>http://maven.ict-societies.eu/nexus/content/repositories/thirdparty/
      </url>
    </repository>

    <!-- Spring source repositories -->
    <repository>
      <id>i21-s3-osgi-repo</id>
      <name>i21 osgi artifacts repo</name>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <url>http://maven.springframework.org/osgi</url>
    </repository>
    <repository>
      <id>com.springsource.repository.bundles.external</id>
      <name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
      <url>http://repository.springsource.com/maven/bundles/external</url>
    </repository>
    <repository>
      <id>com.springsource.repository.bundles.release</id>
      <name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
      <url>http://repository.springsource.com/maven/bundles/release</url>
    </repository>
    <repository>
      <id>com.springsource.repository.bundles.milestone</id>
      <name>SpringSource Enterprise Bundle Repository - SpringSource Milestone Releases</name>
      <url>http://repository.springsource.com/maven/bundles/milestone</url>
    </repository>
    <repository>
      <id>spring-release</id>
      <name>Spring Portfolio Release Repository</name>
      <url>http://maven.springframework.org/release</url>
    </repository>
    <repository>
      <id>spring-ext</id>
      <name>Spring External Dependencies Repository</name>
      <url>
        https://springframework.svn.sourceforge.net/svnroot/springframework/repos/repo-ext/
      </url>
    </repository>

    <!-- General Eclipse repository -->
    <repository>
      <id>eclipse-repository</id>
      <name>Eclipse Repository</name>
      <url>http://repo1.maven.org/eclipse/</url>
    </repository>
        
  </repositories>


  <!-- Defines from where we get our plugin tools ie. tools used during the build -->
  <pluginRepositories>
    <pluginRepository>
      <id>maven-repo</id>
      <name>maven repo</name>
      <url>http://repo1.maven.org/maven2/</url>
    </pluginRepository>

    <!-- Spring tools -->
    <pluginRepository>
      <id>com.springsource.repository.bundles.milestone</id>
      <name>SpringSource Enterprise Bundle Repository - SpringSource Milestone Releases</name>
      <url>http://repository.springsource.com/maven/bundles/milestone</url>
    </pluginRepository>
  </pluginRepositories>



  <dependencies>
    <!-- Whats the reasoning for this ????? and why outside of dependency management-->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.5.8</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <!-- 
    -  This section controls the versions of toolkits and frameworks used
    -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.igniterealtime</groupId>
        <artifactId>tinder</artifactId>
        <version>1.2.2</version>
        <type>jar</type>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.igniterealtime</groupId>
        <artifactId>whack</artifactId>
        <version>1.0.1</version>
        <type>jar</type>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.12</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.igniterealtime.smack</groupId>
        <artifactId>smack</artifactId>
        <version>3.2.1</version>
        <type>jar</type>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.igniterealtime.smack</groupId>
        <artifactId>smackx</artifactId>
        <version>3.2.1</version>
        <type>jar</type>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.igniterealtime.smack</groupId>
        <artifactId>smackx-debug</artifactId>
        <version>3.2.1</version>
        <type>jar</type>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>1.2</version>
        <type>jar</type>
        <scope>compile</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <!-- Configure the build environment -->
  <build>
    
    <!--  EPapadopoulou: start insertion -->
      <!-- Defines versions of the plugin tools ie. tools used during the build -->
   
    <pluginManagement>
     <plugins>
        <plugin>
     <groupId>org.codehaus.mojo</groupId>
     <artifactId>cobertura-maven-plugin</artifactId>
     <version>2.3</version>
        </plugin>
        
        <plugin>
     <groupId>org.apache.felix</groupId>
     <artifactId>maven-bundle-plugin</artifactId>
     <version>2.3.5</version>
        </plugin>
     </plugins>

    </pluginManagement>
    
    <!--  end insertion -->
    
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.0.1</version>
        <executions>
          <execution>
            <id>enforce-property</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>virgo.home</property>
                  <message>You must specify the location of the Virgo installation with the property virgo.home.
Hints: use your profile ~/.m3/settings.xml or set via the command line -Dvirgo.home=location.</message>
                </requireProperty>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--  EPapadopoulou: start insertion -->
      <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-dependency-plugin</artifactId>
           <executions>
           <!-- Used to copy the generated artifact to the container defined by KF_HOME -->
             <execution>
                <id>copy</id>
               <phase>install</phase>
                <goals>
                  <goal>copy</goal>
               </goals>
               <configuration>
                  <stripVersion>true</stripVersion>
               </configuration>
             </execution>            
              <!-- Used to analyze the dependencies of the project. Will print warnings during verify phase,directly before install phase -->
       
            </executions>
         </plugin>
         <!--  EPapadopoulou: end insertion -->
    </plugins>
  </build>
</project>
