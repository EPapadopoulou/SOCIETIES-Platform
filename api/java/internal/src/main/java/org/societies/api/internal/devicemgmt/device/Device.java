package org.societies.api.internal.devicemgmt.device;


/**
 * Represents the basic element from which all devices derive
 * @author rafik
 * @version 1.0
 * @created 06-déc.-2011 15:18:20
 */
public interface Device {

	public static final String DEVICE_CATEGORY = null;
	public static final String DEVICE_DESCRIPTION = null;
	public static final String DEVICE_DRIVER = null;
	public static final String DEVICE_PROVIDER = null;
	public static final String DEVICE_SERIAL = null;
	public static final int EVENT_BATTERY_UPDATED = 4;
	public static final int EVENT_DISABLED = 0;
	public static final int EVENT_ENABLED = 1;
	public static final int EVENT_LOCATION_UPDATED = 3;
	public static final int EVENT_LOW_BATTERY = 2;

	/**
	 * Force disabled state on the device for management purposes. Has no effect 
	 * on the state of the physical device.
	 * Belongs to the Basic Cluster methods.
	 * @return 0 if success, other value means error.
	 */
	public int disable();

	/**
	 * Force enabled state on the device. If the physical device
	 * is not enabled (internal state), this function has no effect and returns error.
	 * Belongs to the Basic Cluster methods.
	 * @return 0 if success,
	 * other value means error.
	 */
	public int enable();

	/**
	 * Returns a list identifying the clusters implemented by the device.
	 * @return String array
	 * with implemented clusters
	 */
	public String [] getClusters();

	/**
	 * Returns device description (human readable). Should be locally
	 * stored by configuration files or in the physical device
	 * if available.
	 * Belongs to the Basic Cluster methods.
	 * @return device
	 * description
	 */
	public String getDeviceDescription();

	/**
	 * Returns unique identifier for the device.
	 * Belongs to the Basic Cluster methods.
	 * @return String
	 * identifying device.
	 */
	public String getDeviceId();

	public String getDeviceLocation();

	/**
	 * Returns whether device is enabled or not
	 * Belongs to the Basic Cluster methods.
	 * @return TRUE: device
	 * is enabled, FALSE: device is disabled
	 */
	public boolean isEnabled();

	/**
	 * Subscribe a listener for the events generated by the device.
	 * @param listener Listener for the events
	 * @return Returns 0 if success, other value if error.
	 * 
	 * @param listener
	 */
	public int registerDeviceListener(DeviceListener listener);

	/**
	 * Set device description (human readable). Should be
	 * locally stored
	 * by configuration files or in the physical device if
	 * available.
	 * Belongs to the Basic Cluster methods.
	 * @param description
	 * Device description
	 * @return
	 * @param description
	 */
	public int setDeviceDescription(String  description);

	/**
	 * 
	 * @param deviceLocation
	 */
	public int setDeviceLocation(String deviceLocation);

	/**
	 * Unsubscribe a listener for the events generated by the
	 * device.
	 * @param listener
	 * Listener for the events
	 * @return Returns 0 if
	 * success, other value if error.
	 * 
	 * @param DeviceListener
	 */
	public int unregisterDeviceListener(DeviceListener listener);

}